Developers Guide
================

This document includes some details relevant for developers. 

..  contents:: 
    :backlinks: top

Installing from a Branch 
------------------------
To install the prog_models package from a specific branch. First clone the repository and checkout the branch. Then navigate into the repository directory and use the following command:
   `pip install -e .`

This command installs the prog_models package using the checked-out version.

Contributing 
---------------
New external (non-NASA or NASA contractor) developers must complete either the `organizational or individual Contributor License Agreement (CLA) <https://github.com/nasa/prog_models/tree/master/forms>`_. 

Curious about what needs to be done? Have an idea for a new feature? Find a bug? Check out `open issues <https://github.com/nasa/prog_models/issues>`_. 

Notes for Developers
--------------------
* Configuration-controlled items: source code, tests, test workflow, issues (requirements, non-conformances, bugs, etc.), milestones, examples, tutorial, templates, and documentation
* The package itself is stored in the src directory.
* Examples are included in the examples/ directory. 
   * Examples should cover the major use cases and features. If a major new feature is added, make sure there's an example demonstrating the feature.
   * For new examples- add to examples __all__ and example tests (tests/test_examples).
   * Also for new examples- add to getting started page in sphinx_config.
   * Examples should include comments explicitly describing each step.
* Tests are included in the tests/ directory.
   * Each new feature should have a test. Check this in each PR review.
   * Check test coverage to improve completeness, automatically reported by bot in each PR.
   * For tests- make sure test are quality. They should cover expected input ranges, error handling. 
* Documentation 
   * Documentation is autogenerated using sphinx. 
   * Configuration is in sphinx_config.
   * Documentation is rebuilt on each release.
   * On each release, documentation can be seen at `nasa.github.io/prog_models <https://nasa.github.io/prog_models/>`_.
* GitHub Actions Test Workflow
   * Automated tests are defined in the .github/ directory.
   * The repository administrator can add tests to the set required to pass for each PR must be done by .
* Template
   * An empty template of a prognostics model is maintained at `prog_model_template.py`.
   * Any changes to the basic model setup should be documented there.
* Dependencies are listed in requirements.txt. In general avoid adding a new dependency.
* A tutorial is included in tutorial.ipynb. This required Juypter Notebooks. All major features should be illustrated here. 
* Legal stuff: All pages should have the following notice on them:
"Copyright Â© 2021 United States Government as represented by the Administrator of the National Aeronautics and Space Administration. All Rights Reserved."

Branching Strategy
------------------
Our project is following the git strategy described `here <https://nvie.com/posts/a-successful-git-branching-model/>`_. Release branches are not required. Details specific to each branch are described below. 

`master`: Every merge into the master branch is done using a pull request (never commiting directly), is assigned a release number, and must comply with the release checklist. The release checklist is a software assurance tool. 

`dev`: Every commit on the dev branch should be functional. All unit tests must function before commiting to dev or merging another branch. Merging into dev should only be done through a PR, unless only documentation has been updated.

`Feature Branches`: These branches include changes specific to a new feature. Before merging into dev unit tests should all run, tests should be added for the feature, and documentation should be updated as appropriate.

PR Checklist
*****************
* Each PR into dev or master must be checked by someone on the team other than the author. 
   * Reviewer should look for bugs, efficiency, readability, testing, and coverage in examples (if relevant).
* Each PR adding a new feature should include a test verifying that feature
* All tests must be passing.
* All errors from static analysis must be resolved.
* All warnings from static analysis must be reviewed and resolved - if deemed appropriate. 
* For merging into master branch - see the Release Checklist below.

Release Checklist
*****************
* Code review - all software must be checked by someone other than the author.
* Check that each new feature has corresponding tests.
* Confirm that all issues associated with the release have been closed (i.e., requirements have been met) or assigned to another release
* Run unit tests `python -m tests`.
* Review the template.
* Test the tutorial.
* Check documents- see if any updates are required.
* Rebuild sphinx documents: `sphinx-build sphinx-config/ docs/`.
* Write release notes.
* Update version number in src/prog_models/__init__.py and setup.py.
* For releases adding new features- ensure that NASA release process has been followed.

Updating Documentation 
------------------------
Use the following command to update documentation (requires sphinx):
.. code-block: bash
    sphinx-build sphinx_config docs\

Uploading new version to PyPI
------------------------
New versions are uploaded upon release (i.e., merging into master branch). The Release Checklist must be complete prior to release

.. code-block: bash
    python -m build --sdist
    python -m build --wheel
    twine upload dist/*

See `here <https://packaging.python.org/guides/distributing-packages-using-setuptools/#packaging-your-project>`_

NPR 7150
--------
NASA software must comply with the requirements enumarated in `NPR 7150 <https://nodis3.gsfc.nasa.gov/displayDir.cfm?t=NPR&c=7150&s=2B>`_. See the `NASA Software Engineering and Assurance Handbook <https://swehb.nasa.gov>`_ for more information.

* Software Classification: Class-E (Research Software)
* Safety Criticality: Not Safety Critical 

Compliance Notation Legend
**************************
* FC: Fully Compliant
* T: Tailored (Specific tailoring described in mitigation) `SWE-121 <https://swehb.nasa.gov/display/7150/SWE-121+-+Document+Alternate+Requirements>`_
* PC: Partially Compliant
* NC: Not Compliant
* NA: Not Applicable

Compliance Matrix
*****************

This matrix tracks the compliance of this software and the project's software engineering practices with the requirements from 7150.2. 

Life Cycle Management
-------------------------------

+-------+----------------------------------+------------+-----------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                        |
+=======+==================================+============+=================================================================+
| 033   | Assess Aquisiton Options         | FC         | See section below                                               |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 013   | Maintain Software Plans          | FC         | This document                                                   |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 024   | Conformance with Project Plan    | NC         | Not required for Class-E                                        |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 034   | Software Acceptance Criteria     | NC         | Not required for Class-E                                        |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 037   | Document Milestones              | FC         | `Milestones <https://github.com/nasa/prog_models/milestones>`_  |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 042   | Electronic Accesss to Source     | FC         | `Repo <https://github.com/nasa/prog_models>`_                   |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 139   | Comply with 7150                 | FC         | This document                                                   |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 121   | Tailored Reqs                    | NA         | No tailoring                                                    |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 125   | Compliance Matrix                | FC         | This document                                                   |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 029   | Software Classification          | FC         | This document                                                   |
+-------+----------------------------------+------------+-----------------------------------------------------------------+

Cost Estimation
-------------------------------
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                        |
+=======+==================================+============+=================================================================+
| 015   | Maintain 1 cost estimate         | FC         | Costs associated are tracked by projects (e.g., SWS, ASO, DRF)  |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 174   | Submit Planning Parameters       | NA         | Specified Center measurement repo does not exist                |
+-------+----------------------------------+------------+-----------------------------------------------------------------+

Schedules
-------------------------------

+-------+----------------------------------+------------+-----------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                        |
+=======+==================================+============+=================================================================+
| 037   | Maintain Schedule                | FC         | `Milestones <https://github.com/nasa/prog_models/milestones>`_  |
+-------+----------------------------------+------------+-----------------------------------------------------------------+

Classification
-------------------------------

+-------+----------------------------------+------------+-----------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                        |
+=======+==================================+============+=================================================================+
| 029   | Software Classification          | FC         | This document                                                   |
+-------+----------------------------------+------------+-----------------------------------------------------------------+
| 020   | Software Classification          | FC         | This document                                                   |
+-------+----------------------------------+------------+-----------------------------------------------------------------+

Software Assurance
-------------------------------

+-------+----------------------------------+------------+---------------------+
| SWE # | Description                      | Compliance | Evidence            |
+=======+==================================+============+=====================+
| 022   | Software Assurance               | FC         | This document       |
+-------+----------------------------------+------------+---------------------+

Safety Critical Software
-------------------------------

+-------+----------------------------------+------------+---------------------+
| SWE # | Description                      | Compliance | Evidence            |
+=======+==================================+============+=====================+
| 205   | Safety Cricial Software          | FC         | See above           |
+-------+----------------------------------+------------+---------------------+
| 023   | Safety Critical Reqs             | NA         | Not safety critical |
+-------+----------------------------------+------------+---------------------+
| 134   | Safety Critical Reqs             | NA         | Not safety critical |
+-------+----------------------------------+------------+---------------------+
| 219   | Safety Critical Reqs             | NA         | Not safety critical |
+-------+----------------------------------+------------+---------------------+
| 220   | Safety Critical Reqs             | NA         | Not safety critical |
+-------+----------------------------------+------------+---------------------+

Automatic Generation of Source Code
-----------------------------------

+-------+----------------------------------+------------+---------------------+
| SWE # | Description                      | Compliance | Evidence            |
+=======+==================================+============+=====================+
| 206   | Autogen Software                 | NA         | No autogen          |
+-------+----------------------------------+------------+---------------------+

Reuse
-------------------------------

+-------+----------------------------------+------------+---------------------+
| SWE # | Description                      | Compliance | Evidence            |
+=======+==================================+============+=====================+
| 148   | Software Catalog                 | FC         | Will be added       |
+-------+----------------------------------+------------+---------------------+

Cybersecurity
-------------------------------

+-------+----------------------------------+------------+---------------------+
| SWE # | Description                      | Compliance | Evidence            |
+=======+==================================+============+=====================+
| 156   | Perform CyberSecurity Assessment | FC         | See section below   |
+-------+----------------------------------+------------+---------------------+

Bi-Directional Traceability
-------------------------------

+-------+----------------------------------+------------+--------------------------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                                       |
+=======+==================================+============+================================================================================+
| 052   | Tracability                      | FC         | See Tracability Notes, below                                                   |
+-------+----------------------------------+------------+--------------------------------------------------------------------------------+

Requirements
-------------------------------

+-------+----------------------------------+------------+--------------------------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                                       |
+=======+==================================+============+================================================================================+
| 050   | Software Requirements            | FC         | `Enhancement Issues <https://github.com/nasa/prog_models/labels/enhancement>`_ |
+-------+----------------------------------+------------+--------------------------------------------------------------------------------+
| 053   | Requirement Change Tracking      | FC         | `Tracked in Issues <https://github.com/nasa/prog_models/labels/enhancement>`_  |
+-------+----------------------------------+------------+--------------------------------------------------------------------------------+

Implementation
-------------------------------

+-------+----------------------------------+------------+--------------------------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                                       |
+=======+==================================+============+================================================================================+
| 135   | Static Analysis                  | FC         | See list of static analysis tools, below.                                      |
+-------+----------------------------------+------------+--------------------------------------------------------------------------------+
| 062   | Unit Testing                     | FC         | Unit tests are created with each enhancement, run automatically with each PR.  |
+-------+----------------------------------+------------+--------------------------------------------------------------------------------+
| 186   | Unit Test Repeatability          | FC         | Unit tests are created with each enhancement, run automatically with each PR.  |
+-------+----------------------------------+------------+--------------------------------------------------------------------------------+
| 063   | Software Version Description     | FC         | `See here <https://github.com/nasa/prog_models/releases>`_                     |
+-------+----------------------------------+------------+--------------------------------------------------------------------------------+

Static Analysis Methods Used:
* `CodeFactor.io <https://www.codefactor.io/repository/github/nasa/prog_models>`_: Runs automatically in each PR. If issues are detected, they are noted in the PR chat. 
* `LGTM <https://lgtm.com/projects/g/nasa/prog_models/?mode=list>`_: Runs automatically in each PR. If issues are detected, they are noted in the PR chat. 
* `Codecov <https://app.codecov.io/gh/nasa/prog_models>`_: Runs automatically in each PR. If issues are detected, they are noted in the PR chat. 
* CodeQL Scanning: Runs automatically in each PR. If issues are detected, they are noted in the PR chat. 
* Github Dependabot Alerts: Tracks dependencies, alerts of any issues. 

Testing
-------------------------------
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                                                             |
+=======+==================================+============+======================================================================================================+
| 065a  | Test Plan                        | FC         | See this document.                                                                                   |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 065b  | Test Procedures                  | FC         | See `GitHub Actions Workflows <https://github.com/nasa/prog_models/tree/master/.github/workflows>`_. |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 065c  | Tests                            | FC         | See `tests directory <https://github.com/nasa/prog_models/tree/master/tests>`_.                      |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 065d  | Test Reports                     | FC         | See `Github Actions Results <https://github.com/nasa/prog_models/actions>`_.                         |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 066   | Verification                     | FC         | Each requirement has verification tests created before closing. Tests run using GitHub actions       |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 068   | Evaluate Test Results            | NC         | Not required for Class-E                                                                             |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 071   | Update Test Plans                | FC         | Workflow, tests, and this document are updated as requirements change                                |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 186   | Code Coverage                    | FC         | See `Codecov <https://app.codecov.io/gh/nasa/prog_models>`_                                          |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 192   | Reqs that Trace to Hazard        |            | Not required for Class-E                                                                             |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+

Operations, Maintenance, and Retirement
----------------------------------------

+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                                                             |
+=======+==================================+============+======================================================================================================+
| 075   | Ops, Maintenance, and Retirement | NC         | Not required for Class-E                                                                             |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 077   | Record-Keeping                   | FC         | Records maintained in repository and Sharepoint folder                                               |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 194   | Delivery Verification            | FC         | See Release Checklist and automated unit and verification tests                                      |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 195   | Maintainance Standards           | FC         | See this document, GitHub records                                                                    |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+
| 196   | Retirement Plan                  | NC         | Not required for Class-E                                                                             |
+-------+----------------------------------+------------+------------------------------------------------------------------------------------------------------+

Configuration Management
-------------------------------

+-------+----------------------------------+------------+-------------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                          |
+=======+==================================+============+===================================================================+
| 079   | Configuration Management Plan    | FC         | See this document                                                 |
+-------+----------------------------------+------------+-------------------------------------------------------------------+
| 080   | Evaluate Sotware Product Changes | FC         | See `PRs <https://github.com/nasa/prog_models/pulls>`_            |
+-------+----------------------------------+------------+-------------------------------------------------------------------+
| 081   | Identify Configuration Items     | FC         | See this document                                                 |
+-------+----------------------------------+------------+-------------------------------------------------------------------+
| 082a  | Levels of Control                | FC         | See this document                                                 |
+-------+----------------------------------+------------+-------------------------------------------------------------------+
| 082b  | Authorization Authority          | FC         | See this document                                                 |
+-------+----------------------------------+------------+-------------------------------------------------------------------+
| 082c  | Authorization Authority          | FC         | See this document                                                 |
+-------+----------------------------------+------------+-------------------------------------------------------------------+
| 083   | Configuration Status             | FC         | See `Branches <https://github.com/nasa/prog_models/branches>`_    |
+-------+----------------------------------+------------+-------------------------------------------------------------------+
| 084   | Configuration Audits             | NC         | Not Required for Class-E                                          |
+-------+----------------------------------+------------+-------------------------------------------------------------------+
| 085   | Release Procedures               | FC         | See this document                                                 |
+-------+----------------------------------+------------+-------------------------------------------------------------------+

Non-Conformances
-------------------------------

+-------+----------------------------------+------------+-------------------------------------------------------------------+
| SWE # | Description                      | Compliance | Evidence                                                          |
+=======+==================================+============+===================================================================+
| 201   | Track non-conformances           | FC         | See `Github Issues <https://github.com/nasa/prog_models/issues>`_ |
+-------+----------------------------------+------------+-------------------------------------------------------------------+

Aquisition Options
******************
Assessed, there are some existing prognostics tools but no general Python package that can support model-based prognostics like we need. 

Cybersecurity Assessment 
************************
Assessed, no significant cybersecurity concerns were identified- research software. 

Requirement Tracking
********************
Requirements are tracked as issues with the "Enhancement" label (See `Enhancement Issues <https://github.com/nasa/prog_models/labels/enhancement>`_). An issue template is used to ensure that the requirement has the desired information. Issues are closed to indicate the requirement has been met. Closing a requirement issue is done with a pull request, which is linked to the relevant requirement, for tracability. Closing the requirement issue requires a code review (see above for details), and requires implementation of passing tests that test the requirement (i.e., verification tests). The tests are reviewed with the code implementing the requirement. Issues are assigned to a milestone (i.e., release) indicating the requirements for that release. Github automatically tracks any changes to the issues (i.e., requirements)

Tracability Notes
*****************
Hazards and non-conformances are tracked as issues with the label `bug <https://github.com/nasa/prog_models/labels/bug>`_. In the template for a bug report, there is a section asking for relevant enhancement issues (i.e., requirements). This linking establishes tracability from hazards/non-conformances to the underlying requirement. These linkings are automatically marked by the github system in the requirement issue. Additionally, to close an enhancement issue (i.e., requirement), passing verification tests must be created and checked in. The PR where these tests are created and the implementation is completed is linked to the issue establishing tracability from requirement -> verification test. These tests run automatically at every change/PR. 

Additionally, requirements are assigned to milestones/releases, establishing bi-directional tracability to these 

Summary: The following tracabilities are maintained:
* Hazard <-> Requirement
* Non-conformance <-> Requirement
* Requirement <-> Verification Test & Results 
* Requirement <-> Implementation
* Release/Milestone <-> Requirement 
